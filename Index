<!doctype html>

<html lang="pl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Generator listy obecnoÅ›ci</title>
  <style>
    :root{
      --bg:#f7f7fb; --ink:#111; --muted:#6b7280; --brand:#0ea5e9; --ok:#16a34a; --danger:#ef4444;
      --card:#ffffff; --line:#e5e7eb; --weekend:#fff7ed; --holiday:#fee2e2; --weekend-mark:#fde68a;
    }
    body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Arial,sans-serif;background:var(--bg);color:var(--ink);} 
    .wrap{max-width:1200px;margin:24px auto;padding:0 16px;}
    .toolbar{display:flex;gap:8px;flex-wrap:wrap;align-items:center;margin-bottom:12px}
    .toolbar .spacer{flex:1}
    .card{background:var(--card);border:1px solid var(--line);border-radius:14px;box-shadow:0 1px 4px rgba(0,0,0,.04)}
    .controls{padding:14px;display:flex;flex-wrap:wrap;gap:10px;align-items:center}
    .controls input[type="text"], .controls input[type="number"], .controls select{padding:6px 8px;border:1px solid var(--line);border-radius:8px;background:#fff;min-width:120px;font-size:13px}
    .btn{padding:6px 10px;border:1px solid var(--line);border-radius:8px;background:#fff;cursor:pointer;font-size:13px}
    .btn.primary{background:var(--brand);border-color:var(--brand);color:#fff}
    .btn.ok{background:var(--ok);border-color:var(--ok);color:#fff}
    .btn.danger{background:var(--danger);border-color:var(--danger);color:#fff}
    .btn:disabled{opacity:.5;cursor:not-allowed}table{width:100%;border-collapse:collapse;margin-bottom:16px}
th,td{border:1px solid var(--line);padding:4px 6px;text-align:center;font-size:12px}
thead th{position:sticky;top:0;background:#fafafa;z-index:2}
tbody th{position:sticky;left:0;background:#fafafa;text-align:left;z-index:1}
.name-cell{min-width:160px;text-align:left}
.day-weekend{background:var(--weekend)}
.day-holiday{background:var(--holiday)}
.total-col{font-weight:600}
.mark-weekend{background:var(--weekend-mark) !important;}

#reportHeader{text-align:center;padding:10px 0;font-size:15px;font-weight:600}

@media print{.no-print{display:none !important}}
@page{size:A4 landscape;margin:10mm}

  </style>
</head>
<body>
<div class="wrap">
  <div class="toolbar no-print">
    <h1 style="margin:0;font-size:20px">âœ… Generator listy obecnoÅ›ci</h1>
    <div class="spacer"></div>
    <button class="btn primary" id="btnPdf">Eksportuj do PDF</button>
  </div>  <div class="card">
    <div class="controls no-print">
      <label>Firma: <input type="text" id="company"></label>
      <label>DziaÅ‚: <input type="text" id="department"></label>
      <label>Kierowca: <input type="text" id="driver"></label>
      <label>Rok: <input type="number" id="year"></label>
      <label>MiesiÄ…c:
        <select id="month">
          <option value="0">StyczeÅ„</option><option value="1">Luty</option><option value="2">Marzec</option>
          <option value="3">KwiecieÅ„</option><option value="4">Maj</option><option value="5">Czerwiec</option>
          <option value="6">Lipiec</option><option value="7">SierpieÅ„</option><option value="8">WrzesieÅ„</option>
          <option value="9">PaÅºdziernik</option><option value="10">Listopad</option><option value="11">GrudzieÅ„</option>
        </select>
      </label>
    </div><div id="reportHeader"></div>

<div id="tableWrapper"></div>
<div id="summary" style="padding:10px;font-size:13px"></div>
<div id="kmSection" style="padding:10px;font-size:13px">
  <h3>ðŸš— Kilometry</h3>
  <div class="km-edit no-print">
    <label>Stan licznika poczÄ…tek miesiÄ…ca: <input type="number" id="kmStart"></label>
    <label>Stan licznika koniec miesiÄ…ca: <input type="number" id="kmEnd"></label>
    <div id="kmSummary" style="margin-top:8px;font-weight:600"></div>
  </div>

  <!-- Raport do PDF -->
  <table id="kmReport" style="width:100%;border-collapse:collapse;margin-top:10px">
    <thead>
      <tr>
        <th style="border:1px solid var(--line);padding:6px">Stan licznika â€“ poczÄ…tek</th>
        <th style="border:1px solid var(--line);padding:6px">Stan licznika â€“ koniec</th>
        <th style="border:1px solid var(--line);padding:6px">Przebyty dystans</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td id="kmCellStart" style="border:1px solid var(--line);padding:6px">0 km</td>
        <td id="kmCellEnd" style="border:1px solid var(--line);padding:6px">0 km</td>
        <td id="kmCellDiff" style="border:1px solid var(--line);padding:6px">0 km</td>
      </tr>
    </tbody>
  </table>
</div>

  </div>
</div><script>
const PL_DAYS=['Nd','Pn','Wt','Åšr','Cz','Pt','So'];
const PL_MONTHS=['styczeÅ„','luty','marzec','kwiecieÅ„','maj','czerwiec','lipiec','sierpieÅ„','wrzesieÅ„','paÅºdziernik','listopad','grudzieÅ„'];

const state={year:new Date().getFullYear(),month:new Date().getMonth(),driver:'',people:['Jan Kowalski'],attendance:{},hours:{},kmStart:0,kmEnd:0};

const elYear=document.getElementById('year');
const elMonth=document.getElementById('month');
const elDriver=document.getElementById('driver');
const elPdf=document.getElementById('btnPdf');
const wrapper=document.getElementById('tableWrapper');
const summaryEl=document.getElementById('summary');
const kmStart=document.getElementById('kmStart');
const kmEnd=document.getElementById('kmEnd');
const kmSummary=document.getElementById('kmSummary');
const kmCellStart=document.getElementById('kmCellStart');
const kmCellEnd=document.getElementById('kmCellEnd');
const kmCellDiff=document.getElementById('kmCellDiff');
const reportHeader=document.getElementById('reportHeader');

function daysInMonth(m,y){return new Date(y,m+1,0).getDate();}
function isWeekend(y,m,d){let wd=new Date(y,m,d).getDay();return wd===0||wd===6;}
function storageKey(){return `attendance-${state.year}-${String(state.month+1).padStart(2,'0')}`;}

function ensureMatrix(){
  const dim=daysInMonth(state.month,state.year);
  state.people.forEach((_,i)=>{
    if(!state.attendance[i])state.attendance[i]={};
    if(!state.hours[i])state.hours[i]={};
    for(let d=1;d<=dim;d++){
      if(!state.attendance[i][d]){
        if(isWeekend(state.year,state.month,d)){
          state.attendance[i][d]='W';
        } else {
          state.attendance[i][d]='';
        }
      }
      if(!state.hours[i][d])state.hours[i][d]={start:'',end:''};
    }
  });
}

function buildTable(){
  ensureMatrix();
  updateHeader();
  const dim=daysInMonth(state.month,state.year);
  let html='<table><thead><tr><th>DzieÅ„</th>';
  for(let d=1;d<=dim;d++){let wd=new Date(state.year,state.month,d).getDay();html+=`<th ${isWeekend(state.year,state.month,d)?'class="day-weekend"':''}>${d}<div class=small>${PL_DAYS[wd]}</div></th>`}
  html+='<th>âœ”</th><th>x</th><th>U</th><th>W</th></tr></thead><tbody>';
  state.people.forEach((p,i)=>{
    let sumOk=0,sumX=0,sumU=0,sumW=0;
    html+=`<tr><th class=name-cell>${p}</th>`;
    for(let d=1;d<=dim;d++){
      const val=state.attendance[i][d]||'';
      if(val==='âœ”') sumOk++;
      if(val==='x') sumX++;
      if(val==='U') sumU++;
      if(val==='W') sumW++;
      const h=state.hours[i][d];
      html+=`<td style="min-width:70px" class="${val==='W'?'mark-weekend':''}">
        <select data-i="${i}" data-d="${d}" class="statusSel">
          <option value="" ${val===''?'selected':''}></option>
          <option value="âœ”" ${val==='âœ”'?'selected':''}>âœ”</option>
          <option value="x" ${val==='x'?'selected':''}>x</option>
          <option value="U" ${val==='U'?'selected':''}>U</option>
          <option value="W" ${val==='W'?'selected':''}>W</option>
        </select><br>
        <input type="time" value="${h.start}" data-i="${i}" data-d="${d}" data-type="start" style="width:60px;font-size:10px"><br>
        <input type="time" value="${h.end}" data-i="${i}" data-d="${d}" data-type="end" style="width:60px;font-size:10px">
      </td>`;
    }
    html+=`<td class=total-col>${sumOk}</td><td class=total-col>${sumX}</td><td class=total-col>${sumU}</td><td class=total-col>${sumW}</td></tr>`;
  });
  html+='</tbody></table>';
  wrapper.innerHTML=html;
  wrapper.querySelectorAll('.statusSel').forEach(sel=>sel.addEventListener('change',onStatusChange));
  wrapper.querySelectorAll('input[type="time"]').forEach(inp=>inp.addEventListener('change',onTimeChange));
  updateSummary();
}

function updateHeader(){
  const m=PL_MONTHS[state.month];
  const y=state.year;
  const d=state.driver||'';
  reportHeader.innerHTML=`Lista obecnoÅ›ci â€“ ${m} ${y}<br>Kierowca: ${d}`;
}

function onStatusChange(e){const i=e.target.dataset.i,d=e.target.dataset.d;state.attendance[i][d]=e.target.value;save();buildTable();}
function onTimeChange(e){const i=e.target.dataset.i,d=e.target.dataset.d,type=e.target.dataset.type;state.hours[i][d][type]=e.target.value;save();}

function updateSummary(){
  const dim=daysInMonth(state.month,state.year);
  let totalOk=0,totalX=0,totalU=0,totalW=0,totalSob=0,totalNd=0;
  state.people.forEach((_,i)=>{
    for(let d=1;d<=dim;d++){
      let val=state.attendance[i][d];
      if(val==='âœ”')totalOk++;
      if(val==='x')totalX++;
      if(val==='U')totalU++;
      if(val==='W'){
        totalW++;
        let wd=new Date(state.year,state.month,d).getDay();
        if(wd===6) totalSob++;
        if(wd===0) totalNd++;
      }
    }
  });
  summaryEl.innerHTML=`<b>Podsumowanie:</b> âœ” ObecnoÅ›ci: ${totalOk}, x Dni wolne: ${totalX}, U Urlopy: ${totalU}, W Weekendy: ${totalW} (Soboty: ${totalSob}, Niedziele: ${totalNd})`;
  updateKmSummary();
}

function updateKmSummary(){
  state.kmStart=parseInt(kmStart.value||0,10);
  state.kmEnd=parseInt(kmEnd.value||0,10);
  const traveled=state.kmEnd-state.kmStart;
  if(!Number.isNaN(state.kmStart)) kmCellStart.textContent = `${state.kmStart} km`; else kmCellStart.textContent = '-';
  if(!Number.isNaN(state.kmEnd)) kmCellEnd.textContent = `${state.kmEnd} km`; else kmCellEnd.textContent = '-';
  if(traveled>=0){
    kmSummary.textContent=`Przebyty dystans: ${traveled} km`;
    kmCellDiff.textContent=`${traveled} km`;
  } else {
    kmSummary.textContent='';
    kmCellDiff.textContent='-';
  }
  save();
}

function save(){
  const key=storageKey();
  const payload={year:state.year,month:state.month,driver:state.driver,people:state.people,attendance:state.attendance,hours:state.hours,kmStart:state.kmStart,kmEnd:state.kmEnd};
  localStorage.setItem(key,JSON.stringify(payload));
}

function load(){
  const key=storageKey();
  const raw=localStorage.getItem(key);
  if(!raw) return false;
  try{
    const data=JSON.parse(raw);
    state.year=data.year;state.month=data.month;state.driver=data.driver||'';state.people=data.people;state.attendance=data.attendance;state.hours=data.hours;state.kmStart=data.kmStart||0;state.kmEnd=data.kmEnd||0;
    kmStart.value=state.kmStart;kmEnd.value=state.kmEnd;elDriver.value=state.driver;
    return true;
  }catch{return false;}
}

elDriver.addEventListener('input',()=>{state.driver=elDriver.value;save();updateHeader();});
kmStart.addEventListener('input',updateKmSummary);
kmEnd.addEventListener('input',updateKmSummary);

elPdf.addEventListener('click',()=>window.print());

(function start(){elYear.value=state.year;elMonth.value=state.month;if(!load())ensureMatrix();buildTable();updateKmSummary();})();
</script></body>
</html>
